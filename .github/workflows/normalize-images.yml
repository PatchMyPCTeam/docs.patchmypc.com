name: Normalize GitBook assets for Git it Write

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: normalize-assets-${{ github.ref }}
  cancel-in-progress: true

jobs:
  normalize:
    if: ${{ github.actor != 'github-actions[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure author
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update to latest main (rebase)
        run: |
          git fetch origin main
          git checkout main
          git rebase origin/main

      - name: Ensure _images exists
        run: mkdir -p _images/gitbook

      - name: Copy from .gitbook/assets → _images/gitbook
        run: |
          if [ -d ".gitbook/assets" ]; then
            rsync -a --delete ".gitbook/assets/" "_images/gitbook/"
          fi

      - name: Rewrite links for Git it Write (depth-aware → relative)
        shell: bash
        run: |
          set -euo pipefail
          shopt -s globstar nullglob

          # All markdown-like files
          mapfile -t files < <(printf "%s\n" **/*.md **/*.MD **/*.mdx **/*.MDX **/*.markdown **/*.MARKDOWN 2>/dev/null)

          for f in "${files[@]}"; do
            # how deep is this file?
            dir="${f%/*}"
            if [[ "$dir" == "$f" ]]; then depth=0; else depth=$(awk -F'/' '{print NF}' <<< "$dir"); fi
            prefix=""
            for ((i=0; i<depth; i++)); do prefix+="../"; done

            PREFIX="$prefix" perl -0777 -i -pe '
              my $p = $ENV{PREFIX};

              # ---- Inline Markdown ----
              # ](ANYTHING/.gitbook/assets/...)  -> ](../_images/gitbook/...)
              s#\]\(\s*<?[^)\s]*?/\.gitbook/assets/#](${p}_images/gitbook/#gi;

              # ---- Raw/JSX HTML ----
              # src="ANYTHING/.gitbook/assets/..." -> src="../_images/gitbook/..."
              s#\bsrc=\s*"[^"]*?/\.gitbook/assets/#src="${p}_images/gitbook/#gi;
              s#\bsrc=\s*'\''[^'\'']*?/\.gitbook/assets/#src='\''${p}_images/gitbook/#gi;

              # ---- Reference-style links ----
              # [id]: ANYTHING/.gitbook/assets/...
              s#^(\[[^\]]+\]:\s*)[^\s]*?/\.gitbook/assets/#${1}${p}_images/gitbook/#gim;
            ' "$f"

            # Percent-encode spaces and parentheses in targets to avoid parser issues
            perl -0777 -i -pe '
              s#\]\(([^)\n]*?_images/gitbook/[^)\n]*)\)# my $u=$1; $u=~s/ /%20/g; $u=~s/\(/%28/g; $u=~s/\)/%29/g; "]($u)" #ge;
              s#\bsrc="([^"]*?_images/gitbook/[^"]*)"# my $u=$1; $u=~s/ /%20/g; $u=~s/\(/%28/g; $u=~s/\)/%29/g; "src=\"$u\"" #ge;
              s#\bsrc='\''([^'\'']*?_images/gitbook/[^'\'']*)'\''# my $u=$1; $u=~s/ /%20/g; $u=~s/\(/%28/g; $u=~s/\)/%29/g; "src='\''$u'\''" #ge;
            ' "$f"
          done

          # Show any leftover .gitbook/assets references (informational)
          git grep -n '\.gitbook/assets' -- '**/*.[mM][dD]' '**/*.[mM][dD][xX]' '**/*.markdown' '**/*.MARKDOWN' || true

      - name: Commit changes (if any)
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "Normalize links to relative _images/ for Git it Write [ci skip]"
          else
            echo "No changes to commit."
          fi

      - name: Rebase on latest and push (retry with --force-with-lease)
        shell: bash
        run: |
          if [ -z "$(git log origin/main..HEAD)" ]; then
            echo "No new commits to push."
            exit 0
          fi
          for attempt in 1 2 3; do
            echo "Push attempt $attempt..."
            if git push --force-with-lease; then
              echo "Pushed successfully."
              exit 0
            fi
            echo "Push rejected. Fetching and rebasing..."
            git fetch origin main
            git rebase origin/main || exit 1
            sleep 2
          done
          echo "Giving up after 3 attempts."
          exit 1
