name: Normalize GitBook assets for Git it Write

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: normalize-assets-${{ github.ref }}
  cancel-in-progress: true

jobs:
  normalize:
    if: ${{ github.actor != 'github-actions[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure author
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update to latest main (rebase)
        run: |
          git fetch origin main
          git checkout main
          git rebase origin/main

      - name: Ensure _images exists (flat, no subfolders)
        run: mkdir -p _images

      - name: Copy from .gitbook/assets → _images (flat)
        run: |
          if [ -d ".gitbook/assets" ]; then
            rsync -a --delete ".gitbook/assets/" "_images/"
          fi

      - name: Rewrite links to /_images/* (MD/MDX/HTML, any prefix)
        shell: bash
        run: |
          set -euo pipefail
          shopt -s globstar nullglob

          # Collect markdown-like files
          mapfile -t files < <(printf "%s\n" **/*.md **/*.MD **/*.mdx **/*.MDX **/*.markdown **/*.MARKDOWN 2>/dev/null)

          for f in "${files[@]}"; do
            # 1) Anything pointing to .gitbook/assets/... → /_images/...
            perl -0777 -i -pe '
              # Inline MD links: ](ANY/.gitbook/assets/<name>)
              s#\]\(\s*<?[^)\s]*?/\.gitbook/assets/([^)\s>"]+)#"](/_images/$1#g;

              # Raw/JSX HTML: src="ANY/.gitbook/assets/<name>"
              s#\bsrc=\s*"[^"]*?/\.gitbook/assets/([^"]+)"#src="/_images/$1"#g;
              s#\bsrc=\s*'\''[^'\'']*?/\.gitbook/assets/([^\']+)'\''#src='\''/_images/$1'\''#g;

              # Reference-style: [id]: ANY/.gitbook/assets/<name>
              s#^(\[[^\]]+\]:\s*)[^\s]*?/\.gitbook/assets/([^\s]+)#$1/_images/$2#gim;
            ' "$f"

            # 2) Normalize any relative _images paths (../_images/..., _images/...) → /_images/...
            perl -0777 -i -pe '
              s#\]\(\s*<?(?:\.\./)*_images/([^)\n>"]+)#"](/_images/$1#g;
              s#\bsrc=\s*"(?:\.\./)*_images/([^"]+)"#src="/_images/$1"#g;
              s#\bsrc=\s*'\''(?:\.\./)*_images/([^\']+)'\''#src='\''/_images/$1'\''#g;

              # Reference-style
              s#^(\[[^\]]+\]:\s*)(?:\.\./)*_images/([^\s]+)#$1/_images/$2#gim;
            ' "$f"

            # 3) Percent-encode spaces and parentheses in any /_images/... target
            perl -0777 -i -pe '
              s#\]\((/_images/[^)\n]*)\)# my $u=$1; $u=~s/ /%20/g; $u=~s/\(/%28/g; $u=~s/\)/%29/g; "]($u)" #ge;
              s#\bsrc="(/_images/[^"]*)"# my $u=$1; $u=~s/ /%20/g; $u=~s/\(/%28/g; $u=~s/\)/%29/g; "src=\"$u\"" #ge;
              s#\bsrc='\''(/_images/[^\']*)'\''# my $u=$1; $u=~s/ /%20/g; $u=~s/\(/%28/g; $u=~s/\)/%29/g; "src='\''$u'\''" #ge;
              s#^(\[[^\]]+\]:\s*)(/_images/\S+)#$1 . do { my $u=$2; $u=~s/ /%20/g; $u=~s/\(/%28/g; $u=~s/\)/%29/g; $u }#gme;
            ' "$f"
          done

          # Show leftover .gitbook/assets (informational)
          git grep -n '\.gitbook/assets' -- '**/*.[mM][dD]' '**/*.[mM][dD][xX]' '**/*.markdown' '**/*.MARKDOWN' || true

      - name: Commit changes (if any)
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "Normalize images to /_images/* for Git it Write [ci skip]"
          else
            echo "No changes to commit."
          fi

      - name: Rebase on latest and push (retry with --force-with-lease)
        shell: bash
        run: |
          if [ -z "$(git log origin/main..HEAD)" ]; then
            echo "No new commits to push."
            exit 0
          fi
          for attempt in 1 2 3; do
            echo "Push attempt $attempt..."
            if git push --force-with-lease; then
              echo "Pushed successfully."
              exit 0
            fi
            echo "Push rejected. Fetching and rebasing..."
            git fetch origin main
            git rebase origin/main || exit 1
            sleep 2
          done
          echo "Giving up after 3 attempts."
          exit 1
